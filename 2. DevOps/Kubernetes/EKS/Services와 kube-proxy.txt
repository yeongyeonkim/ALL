git clone https://github.com/237summit/Kubernetes-on-AWS.git
cd Ku~~ 
'deployment-webui.yaml'

node 당 하나씩 kube-proxy 는 꼭 있다.

커널 - 빠르다, 언제든지 실행할 수 있다.
운영체제의 가장 중요한 구성요소로 입출력을 관리하고 소프트웨어로부터의 요청을 컴퓨터에 있는 하드웨어가 처리할 수 있도록 요청을 변환하는 역할.
소프트웨어와 하드웨어간의 커뮤니케이션을 관리하는 프로그램

* kube-proxy 동작 방식
1. user space mode
느리다.

2. iptables mode - 현재 우리가 쓰는 모드
빠르지만, iptable이 직접 보내주는 과정에서 제대로 전송되었는지 확인이 안된다. (udp 같은건가)
=> 파드 자체에 스스로 ping 요청 등을 보내서 실패하면 컨테이너를 죽이는 것을 삽입함.
커널 베이스라 iptables가 빠르기 때문에 사용할 수 밖에 없는 상황.


3. IPVS mode



yaml 파일 작성시 spec 안에 - 붙이지 않는 것은 unique한거 (name 등) - 붙이는 것은 다중으로 정의 가능한 것(port 등)


======

$ sudo iptables -t nat -S | grep 80

kube-proxy가 로드밸런서처럼 처리하는 구나를 알 수 있음


ClusterIP -> SessionAffinity & External IP

NodePort -> nodePort를 지정해줘도 안해줘도 되지만 지정하면 L4에서 세션 유지가 가능해지는거지 고정 IP를 쓰면서.
aws에서는 자동으로 포트를 설정해주지만 kube는 그렇지 못해서 직접 지정해주어야함






































	