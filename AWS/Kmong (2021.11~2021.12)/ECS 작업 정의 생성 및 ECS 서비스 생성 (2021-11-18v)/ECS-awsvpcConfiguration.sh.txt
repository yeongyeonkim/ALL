#!/bin/bash

## <--- 1. awsvpcConfiguration --->

echo -e "\033[31mEnter the name of awsvpcConfiguration\033[0m"
read jsonfile

awsvpcConfiguration="{\n\"awsvpcConfiguration\": {\n"

## <--- subnets --->
    echo -e "This is \033[31mawsvpcConfiguration\033[0m"
    echo -e "\033[32mEnter the number of subnets\033[0m"
    read sub_cnt

    subnets="\"subnets\": ["
    array=""
    for (( i=1; i<=$sub_cnt; i++ ))
    do
        echo -en "Enter the \033[31m$i\033[0m"
        echo "th subnet"
        read value
        array="$array\"$value\""
        if [ $i -ne $sub_cnt ] ; then
            array="$array,"
        fi
    done

    awsvpcConfiguration="$awsvpcConfiguration$subnets$array],"

## <--- securityGroups --->
    echo -e "\033[32mEnter the number of securityGroups\033[0m"
    read sg_cnt

    securityGroups="\"securityGroups\": ["
    array=""
    for (( i=1; i<=$sg_cnt; i++ ))
    do
        echo -en "Enter the \033[31m$i\033[0m"
        echo "th securityGroup"
        read value
        array="$array\"$value\""
        if [ $i -ne $sg_cnt ] ; then
            array="$array,"
        fi
    done

    awsvpcConfiguration="$awsvpcConfiguration\n$securityGroups$array],"

## <--- assignPublicIp --->
    echo "Decide on assignPublicIp(1: ENABLED, 0: DISABLED)"
    read flag

    if [ $flag -eq 1 ] ; then
        assignPublicIp="\"assignPublicIp\": \"ENABLED\""
    elif [ $flag -eq 0 ] ; then
        assignPublicIp="\"assignPublicIp\": \"DISABLED\""
    fi

    awsvpcConfiguration="$awsvpcConfiguration\n$assignPublicIp\n}\n}"

    echo -e $awsvpcConfiguration | jq '.' > json/$jsonfile
