https://frompmtoawssa.blogspot.com/2018/03/nlb.html

ALB는 Layer 7을 지원한다고 하고 어플리케이션의 헤더에 접근해서 좀더 세부적으로 부하 분산작업을 할 수 있다.
그래서 Layer 4 로드밸런싱은 네트워크 프로토콜 레벨에서 제공 되며, 실제 패킷을 살펴 보지는 못하기 때문에 HTTP나 HTTPS 같은 특정 프로토콜을 인지하지 않고 부하를 분산하고,
Layer 7 로드밸런싱은 좀 더 정교하고 강력한 기능을 제공하며, 패킷을 조사하고, HTTP 및 HTTPS 헤더에 접근해서 좀 더 지능적인 부하 분산 작업이 가능하다고 한다.


**ALB**

* nginx와 proxy와 같은 http/https(L7) 부하분산을 지원하는 솔루션.

  * L7 : 애플리케이션 계층(HTTP, FTP 등)에서 로드를 분산하기 때문에,
    URL에 따라 부하를 분산시키거나, HTTP 헤더의 쿠키값에 따라 부하를 분산하는 등 클라이언트 요청에 보다 세분화해 서버에 전달 가능.
  * 시간 단가 대비 CLB 보다 저렴.
  * 로드밸런스 삭제 방지 기능.
  * Host, Path 기반 라우팅.

* 호스트 헤더 들어올 때 

* site.com 메인 도메인이 있다면

* 운영계 검증계를 나누는거야

* 운영계는 www.site.com이고

* 검증계는 testing.site.com이렇게 구분가능

* 호스트 헤더 / 경로

  * 경로 /main.do 이거는 강제로 무조건 어디로 보낸다. 이런식으로

  clb 쓸 때 보다 장점인 부분

  **호스트 기반 라우팅 기능을 사용하여 불필요한 트래픽을 로드 밸런서에서 차단할 수 있음.**

* **경로 기반 라우팅**
  *  /api로 들어오는 모든 요청을 /mobile이라는 다른 서버로 라우팅 할 수 있었다. 이러한 방식으로 트래픽을 분류하면 각 요청 카테고리에 대한 처리 환경을 제어 할 수 있다. 예를 들어, /api 요청은 컴퓨팅 작업을 위한 인스턴스에서 처리하고, /mobile 요청은 메모리 기반 인스턴스에서 처리할 수 있다.

* **호스트 기반 라우팅 및 기타 규칙**
  * 호스트 헤더에 지정된 도메인 이름을 기반으로 들어오느 트래픽을 라우팅하는 ALB