참고사이트 : https://jojoldu.tistory.com/281

sudo yum update
sudo yum install -y java-1.8.0-openjdk-devel.x86_64
sudo /usr/sbin/alternatives --config java
## number 선택하는게 나오면 1.8.0 버전으로
## (구버전 존재시) sudo yum remove java-1.7.0-openjdk
java -version

https://docs.aws.amazon.com/ko_kr/codedeploy/latest/userguide/codedeploy-agent-operations-install-linux.html
## EC2에 Code Deploy Agent 설치
sudo yum install -y aws-cli
cd /home/ec2-user/
sudo aws configure
# Access Key : .csv
# Secret Access Key : .csv
# region name : ap-northeast-2
# output format : json

sudo yum install -y ruby
wget https://aws-codedeploy-ap-northeast-2.s3.amazonaws.com/latest/install
chmod +x ./install
sudo ./install auto
sudo service codedeploy-agent start
sudo service codedeploy-agent status


## Custom Script : Ec2 인스턴스 부팅시 자동으로 AWS CodeDeploy Agent 실행될 수 있도록 /etc/init.d/에 쉘 스크립트 파일 생성
sudo vim /etc/init.d/codedeploy-startup.sh

#!/bin/bash 
echo 'Starting codedeploy-agent' 
sudo service codedeploy-agent restart

sudo chmod +x /etc/init.d/codedeploy-startup.sh


-----------------Spring-----------------

프로젝트 생성 후 내부에 appspec.yml 생성

version: 0.0
os: linux
files:
  - source:  /
    destination: /home/ec2-user/build/

-> AWS CodeDeploy는 appspec.yml을 통해 어떤 파일들을, 어느 위치로 배포하고, 이후 어떤 스크립트를 실행 시킬 것인지를 모두 관리
-> 위 코드는 Code Build / S3 / Github 등을 통해서 받은 전체 파일들( source: / )을 /home/ec2-user/build/ 로 옮기겠다는 의ㅁ

이후 Amazon Linux에서
mkdir /home/ec2-user/build

-----------------Code Deploy 생성-----------------

사진 5-@ 참고

-----------------Code Deploy 실행-----------------

사진 6-@ 참고

진행하고나면 자동으로 배포가 시작되면서 인스턴스에 애플리케이션을 설치하게 된다.

Code Deploy는 CI의 기능이 없다.
지정된 위치의 파일을 전송하는 역할만 하기 때문에 
보통 Jenkins / Travis CI / AWS Code Build 등을 통해 빌드 후, 빌드된 파일을 받도록 한다.

-----------------ㅇ-----------------

-----------------ㅇ-----------------

-----------------ㅇ-----------------

-----------------ㅇ-----------------

-----------------ㅇ-----------------

